name: CI/CD

on:

  push:
    branches: [ feature/**, release/** ]
  pull_request:
    branches: [ main, develop, release/**]
  workflow_dispatch:
    inputs:
      deploy_branch:
        description: 'La rama a desplegar (ej. release/v1.0.0)'
        required: true
        type: string
        default: 'main'

env:
  IMAGE_TAG: ${{ github.sha }}
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.NOMBRE_BASE }}
jobs:
  ci_build:
    name: CI Build and Artifact
    runs-on: ubuntu-latest
    environment: desa
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.deploy_branch || github.ref }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: maven

      - name: Install
        run: ./mvnw clean install

      - name: Push artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ vars.NOMBRE_BASE }}
          path: target/*.jar
  cd_deploy:
    name: CD Docker Deploy
    runs-on: ubuntu-latest
    if: success() && github.event_name == 'workflow_dispatch'
    needs: ci_build
    permissions:
      contents: read
      actions: read
    environment: desa
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
         ref: ${{ github.event.inputs.deploy_branch }}

      - name: Pull Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ vars.NOMBRE_BASE }}

      - name: Login Docker
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image
        run: |
          echo "Construyendo la imagen con la etiqueta: $IMAGE_NAME:$IMAGE_TAG"
          docker build -f src/main/docker/Dockerfile.jvm -t $IMAGE_NAME:$IMAGE_TAG .

      - name: Push Docker image
        run: |
          echo "Desplegando la imagen: $IMAGE_NAME:$IMAGE_TAG"
          docker push $IMAGE_NAME:$IMAGE_TAG